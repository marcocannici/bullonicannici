#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{listings} % Package for listings
\usepackage{color}
\usepackage{refcount}[2006/02/20]

\definecolor{javablue}{RGB}{42,0.0,255} % for strings
\definecolor{javared}{rgb}{0.6,0,0} % for strings
\definecolor{javagreen}{rgb}{0.25,0.5,0.35} % comments
\definecolor{javapurple}{rgb}{0.5,0,0.35} % keywords
\definecolor{javadocblue}{rgb}{0.25,0.35,0.75} % javadoc

% Syntax highlighting for Java similar to Eclipse
\lstset{
language=Java,
basicstyle=\scriptsize\ttfamily,
frame=single,
aboveskip=1em,
backgroundcolor=\color{white},   % choose the background color	
breaklines=true,                 % automatic line breaking
postbreak=\raisebox{0ex}[0ex][0ex]{\ensuremath{\color{red}\hookrightarrow\space}},
breakindent=0em,
captionpos=b,                    % sets the caption-position to bottom	
keywordstyle=\color{javapurple}\bfseries, %keyword style
stringstyle=\color{javablue}, % string literal style
commentstyle=\color{javagreen}, % comment style
morecomment=[s][\color{javadocblue}]{/**}{*/}, % javadoc style
numbers=left,
numberstyle=\tiny\color{black},
stepnumber=1,
numbersep=10pt,
tabsize=2
%showspaces=false,
%showstringspaces=false
}

\makeatletter
\newcommand*{\lstlinelink}[2]{%
  \refused{#1}%
  \edef\lstlinelink@tmp{\getrefbykeydefault{#1}{anchor}{}}%
  \ifx\lstlinelink@tmp\@empty
    #2%
  \else
    \edef\lstlinelink@target{%
      \expandafter\lstlinelink@parse\lstlinelink@tmp\@nil
      #2%
    }%
    \hyperlink{\lstlinelink@target}{\textbf{#2}}%
  \fi
}
\def\lstlinelink@parse#1.#2\@nil{lstnumber.#2.}%
\makeatother

\newcommand{\includecode}[2]{
\lstinputlisting[linerange=#1-#2, firstnumber=#1]{code/CurrentTransaction.java}
}
\newcommand{\includecodelabel}[3]{
\lstinputlisting[linerange=#1-#2, firstnumber=#1, label=#3]{code/CurrentTransaction.java}
}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Subsection
Method analysis: “sendingReply” 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includecodelabel{1021}{1190}{sendingreply_lst}
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

[5.]
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{
\end_layout

\end_inset

Method names should be verbs, with the first letter of each addition word
 capitalized.
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1048}
\end_layout

\end_inset

: the called method “create_any()” should be renamed in “createAny()”
\end_layout

\begin_layout Itemize
line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1049}
\end_layout

\end_inset

: the called method “insert_boolean()” should be renamed in “insertBoolean()”
\end_layout

\begin_layout Itemize
line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1105}
\end_layout

\end_inset

: the called method “get_localCoordinator()” should be renamed in “getLocalCoord
inator()”
\end_layout

\begin_layout Itemize
line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1107}
\end_layout

\end_inset

: the called method “get_coordinator()” should be renamed in “getCoordinator()”
\end_layout

\begin_layout Itemize
line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1108}
\end_layout

\end_inset

: the called method “servant()” should be renamed in “getServant()”
\end_layout

\begin_layout Itemize
line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1131}
\end_layout

\end_inset

 and 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1161}
\end_layout

\end_inset

: the called method “rollback_only()” should be renamed
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

[8.]
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{
\end_layout

\end_inset

Three or four spaces are used for indentation and done so consistently
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Four spaces are used for indentation but in the following cases the indentation
 rules are not applied correctly:
\end_layout

\begin_deeper
\begin_layout Itemize
line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1036}
\end_layout

\end_inset

 not correclty indented (1 more space)
\end_layout

\begin_layout Itemize
line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1137}
\end_layout

\end_inset

 not correclty indented (2 more spaces)
\end_layout

\begin_layout Itemize
line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1167}
\end_layout

\end_inset

 not correctly indented (2 more spaces)
\end_layout

\begin_layout Itemize
line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1188}
\end_layout

\end_inset

 not correctly indented (2 more spaces)
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

[13.]
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{
\end_layout

\end_inset

Where practical, line length does not exceed 80 characters.
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Some lines of the javadoc documentation of this method exceed 80 characters
\end_layout

\begin_layout Itemize
Some lines of the following comment blocks exceed 80 characters length:
\end_layout

\begin_deeper
\begin_layout Itemize
block from line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1040}
\end_layout

\end_inset

 to 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1044}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
comment at line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1059}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
comment at line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1069}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
comment at line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1075}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
block from line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1114}
\end_layout

\end_inset

 to 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1116}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
block from line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1146}
\end_layout

\end_inset

 to 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1147}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
comment at line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1185}
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

[14.]
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{
\end_layout

\end_inset

When line length must exceed 80 characters, it does NOT exceed 120 characters.
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1090}
\end_layout

\end_inset

: line length is 129 characters
\end_layout

\begin_layout Itemize
line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1095}
\end_layout

\end_inset

: line length is 125 characters
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

[17.]
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{
\end_layout

\end_inset

A new statement is aligned with the beginning of the expression at the same
 level as the previous line.
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1036}
\end_layout

\end_inset

: the argument “holder” should be indented at the same level of the argument
 “id”
\end_layout

\begin_layout Itemize
line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1137}
\end_layout

\end_inset

: the argument “CompletionStatus.COMPLETED_YES” should be indented at the
 same level of the previous argument
\end_layout

\begin_layout Itemize
line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1159}
\end_layout

\end_inset

: “current.isOutgoing()” should be indented at the same same level of 
\begin_inset Quotes eld
\end_inset

current.isAssociated()
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1167}
\end_layout

\end_inset

: the argument “CompletionStatus.COMPLETED_YES” should be indented at the
 same level of the previous argument
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

[19.]
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{
\end_layout

\end_inset

Commented out code contains a reason for being commented out and a date
 it can be removed from the source file if determined it is no longer needed.
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1056}
\end_layout

\end_inset

: It is not specified a date after which the commented code can be deleted
\end_layout

\begin_layout Itemize
line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1111}
\end_layout

\end_inset

: It is not specified neither the reason nor the date
\end_layout

\begin_layout Itemize
line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1121}
\end_layout

\end_inset

: It is not specified neither the reason nor the date
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

[29.]
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{
\end_layout

\end_inset

Check that variables are declared in the proper scope
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1102}
\end_layout

\end_inset

: “coordRef” declaration should be moved inside the else block at line 1106
 because the variable is used only there.
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

[33.]
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{
\end_layout

\end_inset

Declarations appear at the beginning of blocks (A block is any code surrounded
 by curly braces “{“ and “}” ).
 The exception is a variable can be declared in a ‘for’ loop.
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1061}
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1062}
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1072}
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1073}
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1084}
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1101}
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1119}
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1120}
\end_layout

\end_inset

: declarations should be moved at the beginning of the function (line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1038}
\end_layout

\end_inset

)
\end_layout

\begin_layout Itemize
line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1136}
\end_layout

\end_inset

: the declaration of the exception should be moved at the beginning of the
 if() block at line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1130}
\end_layout

\end_inset

.
 The exception could be also immediately thrown instead of assigning it
 to a temporary variable.
\end_layout

\begin_layout Itemize
line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1166}
\end_layout

\end_inset

: the declaration of the exception should be moved at the beginning of the
 if() block at line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1160}
\end_layout

\end_inset

.
 The exception could be also immediately thrown instead of assigning it
 to a temporary variable.
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

[40.]
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{
\end_layout

\end_inset

Check that all objects (including Strings) are compared with "equals" and
 not with "=="
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1089}
\end_layout

\end_inset

: “!=” is used instead of !equals()
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

[42.]
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{
\end_layout

\end_inset

Check that error messages are comprehensive and provide guidance as to how
 to correct the problem
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

At lines 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1094}
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1125}
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1133}
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1163}
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1177}
\end_layout

\end_inset

and 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1180}
\end_layout

\end_inset

 it is not provided an explanation for the logged exception
\end_layout

\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

[44.]
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{
\end_layout

\end_inset

Check that the implementation avoids “brutish programming”
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1065}
\end_layout

\end_inset

: The constructor of TRANSACTION_ROLLEDBACK should be called using the constant
 “Undefined” declared in MinorCode class instead of “0”
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

[51.]
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{
\end_layout

\end_inset

Check that the code is free of any implicit type conversions
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1062}
\end_layout

\end_inset

: The called function “endAborted()” uses a one-element array to pass the
 boolean argument by reference.
 It should be better to use the object type Boolean in order to avoid indexes
 from going out-of-bounds
\end_layout

\begin_layout Itemize
line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1123}
\end_layout

\end_inset

: The called function “replyAction()” uses a one-element array to pass the
 integer argument by reference.
 It should be better to use the object type Integer in order to avoid indexes
 from going out-of-bounds
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

[52.]
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{
\end_layout

\end_inset

Check that the relevant exceptions are caught
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

In some cases instead of catching a specific exception a more general one
 is caught:
\end_layout

\begin_deeper
\begin_layout Itemize
line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1124}
\end_layout

\end_inset

: it should be catched a “SystemException” instead of “Throwable”
\end_layout

\begin_layout Itemize
line 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1131}
\end_layout

\end_inset

 and 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstlinelink{sendingreply_lst}{1161}
\end_layout

\end_inset

: it should be catched an “Inactive” exception instead of “Throwable”
\end_layout

\end_deeper
\end_body
\end_document
