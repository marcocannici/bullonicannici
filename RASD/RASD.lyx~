#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage[dvipsnames]{xcolor}
\usepackage{listings}
\usepackage{alloy-style}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Title
\begin_inset Graphics
	filename resources/others/polimi_logo.png
	scale 30

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash
[1cm]
\end_layout

\end_inset

Politecnico di Milano
\begin_inset Newline newline
\end_inset

A.A.
 2015-2016
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash
[1cm]
\end_layout

\end_inset

Software Engineering 2: myTaxiService
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash
[0.5cm]
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{R}
\end_layout

\end_inset

equirements 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{A}
\end_layout

\end_inset

nalysis and 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{S}
\end_layout

\end_inset

pecifications 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{D}
\end_layout

\end_inset

ocument
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash
[0.5cm]
\end_layout

\end_inset


\end_layout

\begin_layout Author
Matteo Bulloni (852676), Marco Cannici (852527)
\end_layout

\begin_layout Date
6 November 2015
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Subsection
Description of the given problem
\end_layout

\begin_layout Standard
We are going to project an application called myTaxiService, for both web
 and mobile, which has been requested by the government of a large city
 to optimize its taxi service.
 The main aim of this application is to allow people to call a taxi for
 a ride without actually having to make a phone call, but sending a request
 through the application instead, and to automate the handling and transmission
 of the requests from clients to drivers in such a way to make the service
 fast and efficient.
 The users of the application, after registering to the service, will be
 able to request an immediately needed ride, receiving fast notification
 of the incoming taxi code and estimated waiting time, or to make a reservation
 in advance for a ride, specifying its time, date, starting and ending point.
 These requests will be handled by a system which guarantees a fair management
 of taxi queues, obtained dividing the city into zones and handling requests
 depending on where they are coming from, and forwarding them to available
 taxis which are currently in the same area where the client needs to be
 picked up.
 There will thus be an application for taxi drivers, used to inform the
 system about their current state (“available” for a ride or “unavailable”)
 and to handle the ride requests assigned by the system.
 
\end_layout

\begin_layout Subsection
Identifying Stakeholders
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[S1]}{[S1]}
\end_layout

\end_inset

 City’s public transportation company: they want to optimize the service
 offered by taxis in this city by implementing this system; 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[S2]}{[S2]}
\end_layout

\end_inset

 Taxi drivers: the application is going to influence and optimize the performanc
e of their job;
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[S3]}{[S3]}
\end_layout

\end_inset

 Users of the taxi service: they are interested in a system that can easily
 allow them to request taxis and reserve rides; 
\end_layout

\begin_layout Subsection
Actors Identifying
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[AC1]}{[AC1]}
\end_layout

\end_inset

 Guest: a person using myTaxiService application who hasn’t signed up yet
 into the system; 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[AC2]}{[AC2]}
\end_layout

\end_inset

 Passenger user: a person who has registered to myTaxiService passenger
 application, and can in general send ride and reservation requests;
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[AC3]}{[AC3]}
\end_layout

\end_inset

 Driver user: the unique user account associated to a taxi driver, who can
 use all the functionalities provided by myTaxiService driver application;
 it is created by the administrator of the system;
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[AC4]}{[AC4]}
\end_layout

\end_inset

 Administrator: the person who is responsible for the system and the user
 accounts management, and in particular for creating the accounts for drivers;
\end_layout

\begin_layout Subsection
Goals
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[AC1]}{[AC1]}
\end_layout

\end_inset

 Being a guest user, myTaxiService application should only provide one functiona
lity: 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[G1]}{[G1]}
\end_layout

\end_inset

 User registration;
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[AC2]}{[AC2]}
\end_layout

\end_inset

 From the perspective of the passenger user, we think that the application
 should provide the following features in both web and mobile applications:
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[G2]}{[G2]}
\end_layout

\end_inset

 User login and logout; 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[G3]}{[G3]}
\end_layout

\end_inset

 Sending a ride request for an immediately needed ride, specifying where
 to be picked up; 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[G4]}{[G4]}
\end_layout

\end_inset

 Receiving notification that a ride request the user has sent has been accepted
 or queued, if no taxis are currently available; 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[G5}{[G5}
\end_layout

\end_inset

 Sending ride reservation requests, specifying the origin and destination
 of the ride and the reservation time and date; 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[G6]}{[G6]}
\end_layout

\end_inset

 Receiving notification that a reservation request the user has made has
 been accepted or refused; 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[G7]}{[G7]}
\end_layout

\end_inset

 Receiving a reservation reminder notification 10 minutes before a reservation
 has to be performed; 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[G8]}{[G8]}
\end_layout

\end_inset

 Checking the user’s reservation history; 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[G9]}{[G9]}
\end_layout

\end_inset

 Deleting ride reservations included in the history that have been made
 and not yet performed; 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[G10]}{[G10]}
\end_layout

\end_inset

 Viewing and modifying the user’s personal informations (e-mail address,
 password); 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[AC3]}{[AC3]}
\end_layout

\end_inset

 Furthermore, from the perspective of the driver user, the following features
 will be provided (accessible from the specific driver application only):
 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[G11]}{[G11]}
\end_layout

\end_inset

 User authentication and logout; 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[G12]}{[G12]}
\end_layout

\end_inset

 Informing the system about the taxi’s current state: “available” to handle
 new ride requests, or “unavailable”; 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[G13]}{[G13]}
\end_layout

\end_inset

 Receiving ride requests, assigned by the system, to be handled immediately;
 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[G14]}{[G14]}
\end_layout

\end_inset

 Being able to accept or refuse the ride requests within a limited amount
 of time;
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[G15]}{[G15]}
\end_layout

\end_inset

 Receiving reserved ride requests, assigned by the system and notified 10
 minutes in advance with respect to the reservation time; 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[G16]}{[G16]}
\end_layout

\end_inset

 Notify, at the end of each ride, if it was successfully completed or if
 the client couldn’t be found where he should have been; 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[AC4]}{[AC4]}
\end_layout

\end_inset

 To the system administrator, the application should provide the following
 capabilities: 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[G17]}{[G17]}
\end_layout

\end_inset

 Creating, deleting and managing all the kind of user accounts (administrator,
 passenger, driver) and their attributes; 
\end_layout

\begin_layout Subsection
Domain properties
\end_layout

\begin_layout Standard
We assume that the following conditions hold in the analyzed world: 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[D1]}{[D1]}
\end_layout

\end_inset

 The number of people to be served in a ride due to a single request doesn’t
 exceed the capacity of passengers of a single taxi; 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[D2]}{[D2]}
\end_layout

\end_inset

 Whenever a taxi arrives where he should pick up a client and he can’t find
 him, he waits at most a few minutes, and then signals “missing client”
 on the application if he doesn’t show up; 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[D3]}{[D3]}
\end_layout

\end_inset

 Taxi drivers behave in general as honest workers: they won’t keep refusing
 ride requests, also because at the end of each month the transportation
 company checks how much they earned and how many rides they accepted and
 refused, to evaluate their job performance; 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[D4]}{[D4]}
\end_layout

\end_inset

 Whenever a driver accepts a ride request of any kind, he will actually
 and immediately start heading where he is requested to pick the passenger
 up; 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[D5]}{[D5]}
\end_layout

\end_inset

 A driver taking care of an accepted ride request of any kind will always
 reach the spot where he is requested to pick up the passenger, around the
 time he is supposed to; 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[D6]}{[D6]}
\end_layout

\end_inset

 Each taxicab owned by the transportation company is already provided with
 an embedded touch screen tablet device (from now on called 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{taxi_terminal}{taxi terminal}
\end_layout

\end_inset

), located on a protection case in the upper part of the taxi’s gear and
 connected to the vehicle for battery supply, running an Android OS, connected
 to the internet and used to run the navigation system (which is basically
 Google Maps’ API), and on which myTaxiService mobile application for drivers
 will be installed.
 We assume this choice has been made by the company for several reasons:
 
\end_layout

\begin_deeper
\begin_layout Itemize
to ensure a comfortable usage of the applications by the driver without
 compromising the safety of the ride, in terms of attention paid to the
 road while driving;
\end_layout

\begin_layout Itemize
to guarantee saftey in case of accidents; thanks to the case, the device
 will always remain stuck to the dashboard, to avoid hitting the driver
 or the passengers in case of a crash;
\end_layout

\begin_layout Itemize
to prevent thievery acts; the device can't be removed from the protection
 case without the keys to unlock and open it;
\end_layout

\begin_layout Standard
The transportation company operators can of course unlock the protection
 case and remove the tablet in case of need for repairing or particular
 software updates.
 
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[D7]}{[D7]}
\end_layout

\end_inset

 A driver who accepts to offer a ride to a person asking for it on the side
 of the road (so not through myTaxiService application) will immediately
 set his current state on “unavailable”, and will set it back on “available”
 only and immediately after completing the ride.
 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[D8]}{[D8]}
\end_layout

\end_inset

 Before the development of the application described in this document, ride
 and reservation requests could be made only by phone, and the forwarding
 to taxi drivers was handled by a series of dedicated human operators; no
 automated system was present.
\end_layout

\begin_layout Subsection
Glossary 
\end_layout

\begin_layout Subsubsection
Definitions
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{driver_application}{Driver application}
\end_layout

\end_inset

: myTaxiService application (mobile only) for driver users.
 Not publicly available, installed only on taxi terminals, allows drivers
 to inform the system about their state, to receive and handle ride and
 reserved ride requests, and to communicate the system when and how a ride
 coming from a request ends.
 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{driver_user_state}{Driver use's state}
\end_layout

\end_inset

: the state of a logged in driver user, which is set by the user himself
 to inform the system about his current situation, and can be set on “available”
 to handle new ride or reserved ride requests, or “unavailable”.
 It is automatically set and locked on “unavailable” while a ride coming
 from a request is being performed, and automatically set back on “unavailable”
 just after the ride is communicated to be completed
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{myTaxiService}{myTaxiService}
\end_layout

\end_inset

: the application discussed in this document, which aims to offer a fast
 and automated service for requesting and booking taxi rides, and to handle
 forwarding of requests from clients to drivers in an automatic and clever
 way.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{notification}{Notification}
\end_layout

\end_inset

: a generic informative message sent by the system to a driver or passenger
 user.
 Notifications are shown through popup windows in myTaxiService applications,
 and are shown only if the user is online when they are received.
 They can be divided into purely informative (I) and acceptable/refusable
 (A/R) notifications.
 Here we list the main situations for which we use the term “notification”
 sent to a
\end_layout

\begin_deeper
\begin_layout Itemize
Passenger User: 
\end_layout

\begin_deeper
\begin_layout Itemize
to confirm acceptance or refusal of a reservation request (I);
\end_layout

\begin_layout Itemize
to remind a reservation that has to be performed in the next 10 minutes
 (I);
\end_layout

\begin_layout Itemize
to tell that a sent ride request has been accepted or queued (I);
\end_layout

\begin_layout Itemize
to ask if the user wants to confirm or cancel a ride request after he has
 been informed that it has been queued (A/R);
\end_layout

\end_deeper
\begin_layout Itemize
Driver User:
\end_layout

\begin_layout Itemize
to assign a ride request to be performed immediately (A/R);
\end_layout

\begin_layout Itemize
to assign a reserved ride, to be performed in 10 minutes (A only);
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{passenger_application}{Passenger application}
\end_layout

\end_inset

: myTaxiService application (either web or mobile) for passenger users.
 Publicly available for download on mobile devices and accessible by web,
 allows the registered users to send ride and reservation requests, and
 to check and manage their reservation history.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{reservation_reminder_notification}{Reservation reminder notification
}
\end_layout

\end_inset

: a notification sent to a passenger user who has reserved a ride, 10 minutes
 before the reservation shall be performed, to remind the reservation and
 to tell the incoming taxi code.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{reservation_request}{Reservation request}
\end_layout

\end_inset

: a request that can be sent by a passenger user to book a taxi ride in
 the future.
 To send the request, the user is needed to specify a starting point, which
 is the point where the client wants to be picked up by the taxi, a destination
 for the ride, and a meeting time and date, which has to be at least 2 hours
 later than when the request is sent for it to be accepted.
 This kind of request can be cancelled under certain conditions (see 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[AS14]}{[AS14]}
\end_layout

\end_inset

), and must be accepted by the assigned driver (after being accepted by
 the system and received by a driver, this kind of request is referred to
 as “reserved ride request”)
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{reserver_ride}{Reserved ride}
\end_layout

\end_inset

: a taxi ride that has been booked by sending a reservation request through
 myTaxiService application;
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{ride_request}{Ride request}
\end_layout

\end_inset

: a request that can be sent by a passenger user for a ride immediately
 needed, it is myTaxiService's application equivalent of actually calling
 a taxi.
 a starting point, which is the point where the client wants to be picked
 up by the taxi, and a meeting time, which isn't actually specified by the
 client when sending the request, since it's supposed to be as soon as possible.
 This kind of requests are assigned to drivers, and can be either accepted
 or refused by them.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{taxi_terminal}{Taxi terminal}
\end_layout

\end_inset

: a touch screen tablet device, running an android OS, connected to the
 internet, which is placed on the upper part of the car's dashboard in a
 sort of protection case, permanently connected to the vehicle for battery
 supply.
 It is used to run the navigation system (Google Maps) and myTaxiService
 applications.
\end_layout

\begin_layout Subsubsection
Abbreviations
\end_layout

\begin_layout Itemize
[Gn]: n-goal 
\end_layout

\begin_layout Itemize
[Dn]: n-domain assumption 
\end_layout

\begin_layout Itemize
[Sn]: n-stakeholder
\end_layout

\begin_layout Itemize
[Asn]: n-assumption 
\end_layout

\begin_layout Itemize
[Acn]: n-actor
\end_layout

\begin_layout Subsection
Reference Documents 
\end_layout

\begin_layout Itemize
RASDs examples from past years; 
\end_layout

\begin_layout Itemize
IEEE Recommended Practice for Software Requirements Specifications (Revision
 of IEEE Std 830-1993);
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Overall Description
\end_layout

\begin_layout Subsection
Product Perspective
\end_layout

\begin_layout Standard
We will develop the web and mobile passenger applications to offer the passenger
 users the same experience and functionalities on both.
 Anyone aiming to use any of the services provided by myTaxiService application
 as a passenger will need to complete a user registration first; no service
 will be available without being logged in as a registered user.
 After logging in, the user will immediately be able to easily send ride
 or reservation requests.
 An automated system running on the company’s servers, which is constantly
 keeping trace of taxis positions and availability, will handle the incoming
 requests following a defined policy and will forward them to the drivers
 through their specific driver application.
 Drivers can receive and handle requests using the embedded terminal present
 on every taxi of the company, which is basically a tablet device running
 the specific mobile application for drivers.
 Each driver is associated with a unique driver user account, which is created
 by the system administrator and can be accessed on taxi’s terminal using
 the personal driver ID and password, provided by the transportation company.
 After authentication, the driver will be able to set his state on “available”
 or “unavailable”, to receive immediate ride requests and to accept or refuse
 them, to receive reserved ride requests, and to communicate whether an
 accepted ride has or hasn’t been completed successfully.
\end_layout

\begin_layout Subsection
User characteristics
\end_layout

\begin_layout Standard
No special skills will be required to correctly use the software.
 Both passenger and driver users should be able to easily understand how
 the application works and interact with it through a simple and intuitive
 interface.
 Especially in the driver application, since it has to be used while being
 on the road, the user will be required the least possible amount of attention
 and interaction to do what he needs to, to ensure the maximum safety of
 his person and of the passengers.
 
\end_layout

\begin_layout Subsection
Constraints
\end_layout

\begin_layout Subsubsection
Regulatory policies
\end_layout

\begin_layout Standard
The system we provide must meet the following regulatory policies: 
\end_layout

\begin_layout Itemize
Taxi policy of the country where myTaxiService will be available; 
\end_layout

\begin_layout Itemize
Privacy policy for the treatment of personal data stored in the system;
 
\end_layout

\begin_layout Itemize
Policy for the use of the external software involved in the application,
 e.g.
 Google Maps; 
\end_layout

\begin_layout Itemize
Policy about the usage of cookies, to memorize the login details of the
 user on the application, for example;
\end_layout

\begin_layout Subsubsection
Interfaces to other applications
\end_layout

\begin_layout Standard
The system should be able to interact with Google Maps’ API , which is used
 by the central system to estimate the time needed by each taxi to reach
 his destination and in the passenger user’s application to select the origin
 and destination points of a requested ride, when they need to be selected.
 It has also to be created an interface between the driver user’s application
 and the existent navigation system running on embedded taxi terminals,
 which also uses Google Maps, and has to be interfaced with our application
 in order to allow the automatic transmission of the informations about
 the origin and destination points of a ride when it is accepted by the
 driver through myTaxiService application.
\end_layout

\begin_layout Subsubsection
Parallel operations 
\end_layout

\begin_layout Standard
The system must be developed to handle parallel and simultaneous requests
 from multiple users, both drivers and passengers, at the same time.
 A proper DBMS must be configured to manage multiple data accesses.
 
\end_layout

\begin_layout Subsubsection
Documents related 
\end_layout

\begin_layout Itemize
Feasibility study: in order to better understand which marketing and development
 plans shall be done to achieve the fixed goals;
\end_layout

\begin_layout Itemize
RASD: Requirement Analysis and Specification Document, to well-understand
 the given problem and to analyze in a detailed way which are our goals
 and how to reach them, defining proper requirements and specifications;
 
\end_layout

\begin_layout Itemize
DD: Design Document, to define the real structure of our mobile and web
 application; 
\end_layout

\begin_layout Itemize
Code documentation: in order to keep track of the structure of the system
 we are going to develop and guarantee a much easier maintenance of it;
 
\end_layout

\begin_layout Itemize
Installation Manual: a guide to install the system core of myTaxiService;
 
\end_layout

\begin_layout Itemize
User Manual: a guide on how to use myTaxiService, that will be available
 for free download on both the website and the application; 
\end_layout

\begin_layout Itemize
Testing Document: a report of the tests we will perform during the software
 development; 
\end_layout

\begin_layout Subsection
Assumptions
\end_layout

\begin_layout Standard
To declare how we solve ambiguities in the assignment text, and in general
 to state the starting points we considered in designing the application,
 here we provide a list of assumptions we made in developing our solution:
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[AS1]}{[AS1]}
\end_layout

\end_inset

 The service provided by the taxis of this company shall not be exclusively
 due to requests from the application: for instance, if a driver currently
 in “available” state happens to find a person asking for a ride on the
 side of the road, he can answer positively and accept him or her as a client
 (see 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[D7]}{[D7]}
\end_layout

\end_inset

 as a related assumption); 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[AS2]}{[AS2]}
\end_layout

\end_inset

 To guarantee system security and to ensure a fair behavior by the drivers,
 the driver application of myTaxiService has to be available for use directly
 and only on the tablet terminals present on each taxi vehicle, on which
 it will be installed by the company; the application won’t be available
 for download from any kind of public source.
 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[AS3]}{[AS3]}
\end_layout

\end_inset

 To ensure system security and avoid potential attacks and problems, a policy
 has to be followed such that accounts for driver users will be allowed
 to be created directly and only by the system administrator, with each
 username corresponding to the driver ID of the driver associated to that
 account.
 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[AS4]}{[AS4]}
\end_layout

\end_inset

 The central system has to store data considering the city divided into
 several city zones, to keep organized and manage the informations about
 drivers and requests; a queue of available drivers has to be associated
 to each city zone, and shall be kept updated in real time, to forward requests
 rapidly.
 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[AS5]}{[AS5]}
\end_layout

\end_inset

 The central system has to be developed to guarantee a fair management of
 taxi queues, and it has to do this by forwarding requests coming from passenger
 users starting from the first available driver in the queue of the correspondin
g city zone (i.e.
 the one who has been on “available” state for the longest time from his
 last state switch); 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[AS6]}{[AS6]}
\end_layout

\end_inset

 The central system is capable of offering the passenger users waiting for
 a taxi to come an estimate of the expected waiting time, calculated in
 real time through Google Maps, which takes into account also traffic situation,
 and is the same API used as navigation system on taxicabs;
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[AS7]}{[AS7]}
\end_layout

\end_inset

 The central system is capable of receiving GPS informations from each taxi
 of the company, to keep informations about their position updated (see
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Accuracy"

\end_inset

 Accuracy); 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[AS8]}{[AS8]}
\end_layout

\end_inset

 In handling reserved ride requests, the system is able to manage the requests
 and queues in such a way that it is always ensured that a driver is available
 to handle each reserved ride request 10 minutes before the ride has to
 be performed; 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[AS9]}{[AS9]}
\end_layout

\end_inset

 If a driver user doesn’t either accept or refuse a ride request within
 a certain defined time limit (15 seconds), the system has to consider it
 as refused by the driver, and forward it to the next user in the drivers'
 queue; 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[AS10]}{[AS10]}
\end_layout

\end_inset

 Driver users can’t refuse a reserved ride request when they are assigned
 to it: to fulfill the government’s transportation policy, implemented in
 order to provide a reliable reservation service, these requests must be
 accepted by the assigned drivers.
 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[AS11]}{[AS11]}
\end_layout

\end_inset

 User registration is going to be required to use any of the functionalities
 offered by myTaxiService passenger application, in order to collect more
 detailed informations about the usage of the service and to protect the
 system from dangerous and bad user behaviors (e.g.
 ride requests spamming, never showing up after requesting a ride, … ),
 which can be detected and collected if coming from registered users.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[AS12]}{[AS12]}
\end_layout

\end_inset

 Passenger users who have registered their account but haven't confirmed
 it yet through the confirmation email sent by the system to their email
 address shall not be able to use any of the application's functionalities,
 until they complete the account confirmation.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[AS13]}{[AS13]}
\end_layout

\end_inset

 Reservation requests sent by passenger users less than 2 hours in advance
 with respect to the reservation's pick up time always have to be refused
 by the system.
 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[AS14]}{[AS14]}
\end_layout

\end_inset

 Passenger users have to be allowed to delete ride reservations they have
 made and are yet to be performed, but only until 1 hour before the reservation
 has to be performed (i.e.
 when the ride shall actually start).
 Otherwise, the reservation can't be canceled.
 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[AS15]}{[AS15]}
\end_layout

\end_inset

 There has to be a passenger users' waiting queue associated to each city
 zone, in which passenger users who make a ride request when there are no
 available taxis in their current city zone are put by the system, until
 a taxi becomes available and handles their request.
 When this happen, the user put in the queue has to be told he has been
 put in such a queue and asked if he still wants to confirm the ride request,
 or if he wants to cancel it.
 If the user doesn't answer within a limited amount of time (30 seconds),
 the request has to be considered as canceled.
 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{[AS16]}{[AS16]}
\end_layout

\end_inset

 MyTaxyService interface for administrator users has to be developed only
 for the web application.
 It is not required to provide the administrator interface and its functionaliti
es on the mobile application.
 
\end_layout

\begin_layout Subsection
Future possible implementations
\begin_inset CommandInset label
LatexCommand label
name "sub:Future-possible-implementations"

\end_inset


\end_layout

\begin_layout Itemize
Shared rides: the transportation company has planned to optimize the proposed
 system in order to allow shared rides in the near future.
 The system will be able to plan the route the driver has to follow in a
 way that allows to pick up other passengers during the ride.
 In order to achieve this goal the system will also ask the destination
 of the ride when a user requests one, in the same way as it’s already done
 for reservation requests, and the exact number of people that are included
 in the ride request.
 
\end_layout

\begin_layout Itemize
SMS notifications: the company also aims to implement a notification functionali
ty that uses SMS to send reminder notifications to passengers which have
 reserved rides in the near future, and in general to allow users without
 internet access to receive notifications; to achieve this, the passenger
 users will be requested to provide their mobile phone numbers, if they
 want to.
 
\end_layout

\begin_layout Section
Specific requirements
\end_layout

\begin_layout Subsection
External Interface requirements 
\end_layout

\begin_layout Subsubsection
User interfaces
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G3]}{[G3]}, 
\backslash
hyperlink{[G5]}{[G5]}, 
\backslash
hyperlink{[G8]}{[G8]}
\end_layout

\end_inset

 User’s homepage: this mockup shows how the user home page shall look like;
 from this page the user should be able to request or reserve a ride, and
 to check the list of reservations he/she has already requested.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\begin_inset Graphics
	filename resources/mockups/home_mobile.png
	width 3cm

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G5]}{[G5]}
\end_layout

\end_inset

 Ride reservation page: This mockup shows how a user can request a ride
 reservation.
 The user can select origin and destination locations by typing the address
 or by clicking on “from” or “to” icons and then directly on the map, and
 select date and time by selecting the value inside a popup.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\begin_inset Graphics
	filename resources/mockups/res_pupop_web.png
	width 10cm

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename resources/mockups/res_key_mobile.png
	width 3cm

\end_inset


\begin_inset Graphics
	filename resources/mockups/res_mobile.png
	width 3cm

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G3]}{[G3]}
\end_layout

\end_inset

 Ride request page: This mockup shows how the user can request a ride.
 To select where he wants to be picked up, the user can choose to use his
 current location (default choice, provided by his GPS module, if there
 is one on the device he is currently using), or to select a different spot.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\begin_inset Graphics
	filename resources/mockups/ride_web.png
	width 10cm

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename resources/mockups/ride_mobile.png
	width 3cm

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G4]}{[G4]}
\end_layout

\end_inset

 Passenger user’s notifications: This mockup shows how notifications are
 displayed when they are received from the system.
 Notifications are mainly used to provide informations about the code of
 the incoming taxi and the estimated waiting time when a requested ride
 is accepted, or in general about the acceptance or refusal of a request
 sent by the user, but can also be used to display other kinds of messages
 (see glossary entry “
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{notification}{Notification}
\end_layout

\end_inset

” for more details).
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\begin_inset Graphics
	filename resources/mockups/not_web.png
	width 10cm

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename resources/mockups/home.png
	width 3cm

\end_inset


\begin_inset Graphics
	filename resources/mockups/not_mobile.png
	width 3cm

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G8]}{[G8]}, 
\backslash
hyperlink{[G9]}{[G9]}
\end_layout

\end_inset

 Reservation history: This mockup shows how the user can view the list of
 reservations he has already requested.
 If the reservation hasn’t already been performed, and only until 1 hour
 before the ride should be performed, the user can delete it.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\begin_inset Graphics
	filename resources/mockups/res_history_1.png
	width 3cm

\end_inset


\begin_inset Graphics
	filename resources/mockups/history_mobile.png
	width 3cm

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename resources/mockups/red_dat.png
	width 3cm

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G11]}{[G11]}, 
\backslash
hyperlink{[G15]}{[G15]}
\end_layout

\end_inset

 Driver user’s homepage (during a ride): This mockup shows the homepage
 of the driver user after he has been assigned and has accepted a ride request.
 In this condition, he has to first communicate how the ride terminated
 (successfully or before even starting, because the client was missing)
 to be able to change his status back to “available” and to receive new
 requests.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\begin_inset Graphics
	filename resources/mockups/driver.png
	width 10cm

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G10]}{[G10]}
\end_layout

\end_inset

 Ride/Reserved ride request notifications: This mockup shows how notifications
 are displayed to the driver.
 These notifications contain informations about the ride he has been assigned
 to, and allow him to accept (both kinds) or refuse it (only for the ride
 requests).
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\begin_inset Graphics
	filename resources/mockups/drive_not_res.png
	width 10cm

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename resources/mockups/driver_ride_not.png
	width 10cm

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Software Interfaces 
\end_layout

\begin_layout Itemize
Database Management System (DBMS) 
\end_layout

\begin_deeper
\begin_layout Itemize
Name: MySQL; 
\end_layout

\begin_layout Itemize
Version: Enterprise Edition 5.7 
\end_layout

\begin_layout Itemize
Source: http://www.mysql.com/ 
\end_layout

\end_deeper
\begin_layout Itemize
HTTP Server 
\end_layout

\begin_deeper
\begin_layout Itemize
Name: Apache HTTP Server 
\end_layout

\begin_layout Itemize
Edition: 2.4
\end_layout

\begin_layout Itemize
Source: https://httpd.apache.org/;
\end_layout

\end_deeper
\begin_layout Itemize
Mapping Service:
\end_layout

\begin_deeper
\begin_layout Itemize
Name: Google Maps API 
\end_layout

\begin_layout Itemize
Version: Web / iOS / Android 
\end_layout

\begin_layout Itemize
Source: https://developers.google.com/maps/
\end_layout

\end_deeper
\begin_layout Subsection
Communications Interfaces
\end_layout

\begin_layout Itemize
TCP protocol (both HTTP and HTTPS applications running on standard ports)
 for client-server communication
\end_layout

\begin_layout Itemize
SSL encryption protocol for DBMS communication
\end_layout

\begin_layout Subsection
Programmatic interfaces
\end_layout

\begin_layout Standard
The system shall be developed to offer also programmatic interfaces, with
 the main aim of allowing the services offered by the application to be
 easily extended through the development of new modules, for example to
 handle the possible future implementation of the ride sharing functionality,
 as predicted in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Future-possible-implementations"

\end_inset

.
 Concretely, these programmatic interfaces will consist in public interfaces
 (e.g like the ones that are used in Java language) which allow to make calls
 to methods of the already existing classes of the project.
 All the methods and functions used by the system to perform his duty won’t
 be explicitly defined in the essential class diagram provided in section
 5.1
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Class-Diagrams"

\end_inset

, but in general the ones exposed as APIs will include some that allow to
 exploit functionalities like the ones listed next, among all the ones available
 internally on the system:
\end_layout

\begin_layout Itemize
User registration, login and logout;
\end_layout

\begin_layout Itemize
Sending ride and reservation requests as passenger user;
\end_layout

\begin_layout Itemize
Handling taxi’s availability state, ride’s state (terminated, missing client,
 ...) and request acceptance or refusal as driver user; 
\end_layout

\begin_layout Itemize
Computation of taxi positions, city zones busyness, driver and passenger
 queues statuses, driver users’ job performance evaluation, passenger users’
 reliability evaluation and other useful informative functions; 
\end_layout

\begin_layout Subsection
Functions
\end_layout

\begin_layout Standard
Here we list the functional requirements the system shall match, identified
 basing on IEEE Standard Requirement Specification document definition,
 paired with the goals proposed in the “Goals” section and divided by the
 category of actor or entity which is dealing with such requirement: 
\end_layout

\begin_layout Subsubsection
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
protect
\backslash
hyperlink{[AC1]}{[AC1]}
\end_layout

\end_inset

 Guest requirements
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G1]}{[G1]}
\end_layout

\end_inset

 User registration:
\end_layout

\begin_deeper
\begin_layout Itemize
The application shall provide a registration functionality on its main page;
\end_layout

\begin_layout Itemize
The registration process shall request the guest to insert a username, a
 password and an email address; 
\end_layout

\begin_layout Itemize
The system shall check the validity of such provided informations (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Security"

\end_inset

 Security section of performance requirements), and ask to insert them again
 if something is detected as not valid, specifying which of the fields generated
 the problem; 
\end_layout

\begin_layout Itemize
If the provided informations are valid, the system shall generate and send
 a registration confirmation email to the user, to be used to effectively
 activate the new account; 
\end_layout

\end_deeper
\begin_layout Subsubsection
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
protect
\backslash
hyperlink{[AC2]}{[AC2]}
\end_layout

\end_inset

 Passenger user requirements
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G2]}{[G2]}
\end_layout

\end_inset

 User login and logout:
\end_layout

\begin_deeper
\begin_layout Itemize
The application shall provide a login functionality for passenger users
 on its main page, allowing to login by typing username and password; 
\end_layout

\begin_layout Itemize
After successfully completing the login, the user shall be displayed his
 home page; 
\end_layout

\begin_layout Itemize
The application shall provide a logout functionality on the user’s home
 page, accessible from the menu that opens by clicking on the “user account”
 visual icon (top right of the user’s home page); 
\end_layout

\begin_layout Itemize
On the mobile application for passenger users, the user shall not have to
 perform the login again after the first time: the application shall keep
 him logged in later on, even after being closed.
 This unless the user actually performs a logout;
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G3]}{[G3]}
\end_layout

\end_inset

 Sending request for an immediately needed ride, specifying where to be
 picked up: 
\end_layout

\begin_deeper
\begin_layout Itemize
The user shall be able to access the “ride request” screen interface from
 his home page; 
\end_layout

\begin_layout Itemize
In the “ride request” screen, the application shall allow the user to send
 a ride request, specifying the position where he wants to be picked up
 by typing it into a box or selecting it on the city’s map; 
\end_layout

\begin_layout Itemize
The user’s position when requesting a ride shall be set by default as the
 one provided by his GPS module, if there is one on the device he is currently
 using; 
\end_layout

\begin_layout Itemize
The system shall check that the provided position is valid (an existing
 address or coordinate if typed in by hand) and inside the area in which
 the system is available, and ask to select it again if it is not; 
\end_layout

\begin_layout Itemize
The system shall prevent the user to send multiple ride requests: if the
 user has already requested a ride in the short past, that functionality
 shall be disabled until the current request is answered and completed;
 
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G4]}{[G4]}
\end_layout

\end_inset

 Receiving notification that a ride request the user has sent has been accepted
 or queued, if no taxis are currently available: 
\end_layout

\begin_deeper
\begin_layout Itemize
After sending a ride request, in case of a lack of available taxis, the
 system shall immediately notify the user he has been put into a waiting
 queue, showing a notification with the estimated waiting time for a taxi
 to free up; thus the user shall be asked to further confirm the request
 if he can wait a little, or to cancel it; 
\end_layout

\begin_deeper
\begin_layout Itemize
If the user confirms, or equally if the system didn’t detect a lack of available
 taxis at the beginning, he shall be told to wait until a new notification
 comes; 
\end_layout

\begin_layout Itemize
If the user doesn’t provide an answer until a fixed limited amount of time
 (30 seconds, as assumed in 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[AS15]}{[AS15]}
\end_layout

\end_inset

), the request shall be considered as cancelled; 
\end_layout

\end_deeper
\begin_layout Itemize
As soon as the sent request is accepted by a driver, the user shall receive
 and be shown a popup notification confirming that the request has been
 accepted, and showing the incoming taxi code and estimated waiting time;
 
\end_layout

\begin_layout Itemize
On the mobile application, the notifications described above shall be shown
 as popup windows on the phone’s screen even if the application is closed
 when they are received (only if the user had already logged in through
 the application of course);
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G5]}{[G5]}
\end_layout

\end_inset

 Sending ride reservation requests, specifying the origin and destination
 of the ride and the reservation time and date: 
\end_layout

\begin_deeper
\begin_layout Itemize
The user shall be able to access the “ride reservation” screen interface
 from his home page; 
\end_layout

\begin_layout Itemize
In the “ride reservation” screen, the application shall allow the user to
 send a ride reservation request, asking him to specify the origin and destinati
on of the ride (to be specified in the same way as described above for 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G3]}{[G3]}
\end_layout

\end_inset

 requirements), and its time and date; 
\end_layout

\begin_layout Itemize
Time and date shall be selected from a popup box allowing to select consistent
 inputs only (i.e.
 not a date in the past or on a not existing day); 
\end_layout

\begin_layout Itemize
The system shall check that the provided origin and destination locations
 are valid and inside the area in which the system is available, and ask
 to select them again if they are not; 
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G6]}{[G6]}
\end_layout

\end_inset

 Receiving notification that a reservation request the user has made has
 been accepted or refused: 
\end_layout

\begin_deeper
\begin_layout Itemize
A popup notification shall be shown right after the reservation request
 is sent, telling if it has been accepted or not; 
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G7]}{[G7]}
\end_layout

\end_inset

 Receiving a reservation reminder notification 10 minutes before a reservation
 has to be performed: 
\end_layout

\begin_deeper
\begin_layout Itemize
Ten minutes before a reserved ride has to be performed, the user shall receive
 and be shown a reminder notification if he is logged into the web or mobile
 application in that moment (the mobile app always keeps the user logged
 in, as described in the last requirement of 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G2]}{[G2]}
\end_layout

\end_inset

), telling him the incoming taxi code and the estimated waiting time; 
\end_layout

\begin_layout Itemize
On the mobile application, this reservation reminder notification above
 shall be shown as popup window on the phone’s screen even if the application
 is closed when it is received (only if the user had already logged in through
 the application of course); 
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G8]}{[G8]}
\end_layout

\end_inset

 Checking the user’s reservation history: 
\end_layout

\begin_deeper
\begin_layout Itemize
The user shall be able to view his ride reservation history on a dedicated
 screen, accessible from his home page; 
\end_layout

\begin_layout Itemize
The history shall display all the reservations made by the user and accepted
 by the system that will be performed in the future, and the ones that have
 been completed in the last month; 
\end_layout

\begin_layout Itemize
The history shall be displayed divided into already performed and not yet
 performed rides: 
\end_layout

\begin_deeper
\begin_layout Itemize
Not yet performed reservations shall be displayed from the closest to happen
 to the farthest; 
\end_layout

\begin_layout Itemize
Already performed rides shall be displayed from the last one performed to
 the oldest one; 
\end_layout

\end_deeper
\begin_layout Itemize
By clicking on a not yet performed reservation, all the ride details shall
 be shown; 
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G9]}{[G9]}
\end_layout

\end_inset

 Deleting ride reservations included in the history that have been made
 and not yet performed; 
\end_layout

\begin_deeper
\begin_layout Itemize
Besides each not yet performed reservation there shall be a “delete” button
 (appears by sliding with the finger from right to left on the reservation
 in the mobile application), which allows to delete that reservation (asking
 further confirmation before completing the cancellation); this functionality
 shall be available only until 1 hour before the reserved ride has to be
 performed; 
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G10]}{[G10]}
\end_layout

\end_inset

 Viewing and modifying the user’s personal informations (e-mail address,
 password); 
\end_layout

\begin_deeper
\begin_layout Itemize
The user shall be able to view his profile informations; this shall be done
 by opening the “user account” menu through the visual icon on the top right
 of his home page and by selecting “view profile”; 
\end_layout

\begin_layout Itemize
On the “view profile” screen, the user shall be able to modify his password
 and e-mail address (provided that he provides new valid ones); 
\end_layout

\end_deeper
\begin_layout Subsubsection
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
protect
\backslash
hyperlink{[AC3]}{[AC3]}
\end_layout

\end_inset

 Driver user requirements
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G11]}{[G11]}
\end_layout

\end_inset

 User authentication and logout:
\end_layout

\begin_deeper
\begin_layout Itemize
The application shall allow the driver user to log into the system from
 the main page, by inserting its driver ID and password; 
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G12]}{[G12]}
\end_layout

\end_inset

 Informing the system about his current state: “available” to handle new
 ride requests, or “unavailable”: 
\end_layout

\begin_deeper
\begin_layout Itemize
On the user’s home page, the application shall allow the driver to inform
 the system when he is in “available” or “unavailable” state, by simply
 sliding with a finger on a switch between the two states; 
\end_layout

\begin_layout Itemize
The switch shall be set on “unavailable” by default right after the user
 has logged in; 
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G13]}{[G13]}
\end_layout

\end_inset

 Receiving ride requests, assigned by the system, to be handled immediately:
 
\end_layout

\begin_deeper
\begin_layout Itemize
The application shall notify the driver that the system has assigned him
 a ride or a reservation through a popup window, showing the ride’s starting
 point; 
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G14]}{[G14]}
\end_layout

\end_inset

 Being able to accept or refuse the request within a limited amount of time:
 
\end_layout

\begin_deeper
\begin_layout Itemize
When a ride request is displayed, the application shall ask the driver to
 accept or refuse the assigned ride, giving a fixed limited amount of time
 to answer (10 seconds, as specified in 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[AS9]}{[AS9]}
\end_layout

\end_inset

); 
\end_layout

\begin_layout Itemize
If the driver accepts the request, his state shall automatically be set
 on “unavailable”, the screen shall switch to the taxi’s navigation system
 application and his destination shall be displayed; 
\end_layout

\begin_layout Itemize
If the driver refuses the request or doesn’t provide an answer within the
 given time, the system shall consider the request as refused and close
 the popup window, keeping the driver’s state on “available”; 
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G15]}{[G15]}
\end_layout

\end_inset

 Receiving reserved ride requests, assigned by the system and notified 10
 minutes in advance with respect to the reservation time: 
\end_layout

\begin_deeper
\begin_layout Itemize
When a reserved ride request is assigned to the driver by the system, a
 popup window shall be shown 10 minutes in advance, showing the reservation
 details; 
\end_layout

\begin_layout Itemize
Since this request can’t be refused, after the driver accepts it the screen
 shall switch to the navigation system application, and the origin and destinati
on of the ride shall be displayed on the map;
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G16]}{[G16]}
\end_layout

\end_inset

 Notify, at the end of each ride, if it was successfully completed or if
 the client couldn’t be found where he should have been: 
\end_layout

\begin_deeper
\begin_layout Itemize
When a ride or reserved ride request is accepted by the driver user, the
 “terminate ride” and “missing client” buttons shall become available on
 his application’s main page; 
\end_layout

\begin_layout Itemize
After tapping on one of the buttons (used to end a ride), the application
 shall communicate to the system that the current ride has ended, and the
 user’s status shall be automatically set back to “available”; 
\end_layout

\end_deeper
\begin_layout Subsubsection
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
protect
\backslash
hyperlink{[AC4]}{[AC4]}
\end_layout

\end_inset

 Administrator requirements
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G16]}{[G16]}
\end_layout

\end_inset

 Creating, deleting and managing all the kind of user accounts (administrator,
 passenger, driver) and their attributes: 
\end_layout

\begin_deeper
\begin_layout Itemize
The administrator interface shall be accessible by logging in from myTaxiService
 web application only (as stated in 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[AS16]}{[AS16]}
\end_layout

\end_inset

), through the usual login form used by passenger users; 
\end_layout

\begin_layout Itemize
The administrator interface shall allow him to create new passenger users
 providing a valid username, password and email;
\end_layout

\begin_layout Itemize
The interface shall allow him to create new administrator users providing
 a valid username and a password; 
\end_layout

\begin_layout Itemize
The interface shall allow him to create new driver users providing a valid
 driver ID as a username and a password; 
\end_layout

\begin_layout Itemize
The interface shall allow him to formulate queries searching for existing
 users, displaying the results in a “query result” screen; 
\end_layout

\begin_layout Itemize
The interface of the “query result” screen shall allow him to delete any
 user (either admin, driver or passenger) and to edit any user’s information;
 
\end_layout

\end_deeper
\begin_layout Subsection
System requirements 
\end_layout

\begin_layout Standard
Here we list the non-functional requirements the system shall provide, paired
 with the goals proposed in the “Goals” section and divided by the category
 of actor or entity which is dealing with or providing such requirement:
\end_layout

\begin_layout Subsubsection
Maintainability 
\end_layout

\begin_layout Itemize
The system shall permit replacement and upgrade of the hardware without
 downtime;
\end_layout

\begin_layout Itemize
The system shall permit software upgrade without downtime;
\end_layout

\begin_layout Itemize
The MTTR (Mean Time to Repair) of the system shall not exceed 24 hours;
 
\end_layout

\begin_layout Subsubsection
Reliability 
\end_layout

\begin_layout Itemize
The MTTF (Mean Time To Failure) shall not exceed 1 year;
\end_layout

\begin_layout Itemize
Each release of the application should satisfy all the code tests before
 being released; 
\end_layout

\begin_layout Subsubsection
Availability 
\end_layout

\begin_layout Itemize
The system should be available 24 hours a day, 7 days a week.
\end_layout

\begin_layout Subsubsection
Capacity 
\end_layout

\begin_layout Itemize
The system shall support without problems at least 2000 passenger users
 simultaneously connected;
\end_layout

\begin_layout Itemize
The system shall support without problems at least 500 driver users simultaneous
ly connected;
\end_layout

\begin_layout Itemize
The system shall support without problems at least 1000 simultaneous requests;
 
\end_layout

\begin_layout Subsubsection
Time Response
\end_layout

\begin_layout Itemize
The system shall provide a feedback for each user’s action within a maximum
 of 3 seconds;
\end_layout

\begin_layout Itemize
Every time an event that interests the user occurs, the system shall notify
 him within a maximum of 3 seconds; 
\end_layout

\begin_layout Subsubsection
Accuracy
\begin_inset CommandInset label
LatexCommand label
name "sub:Accuracy"

\end_inset

 
\end_layout

\begin_layout Itemize
The system shall update the informations about the position of each taxi
 in his database every 30 seconds;
\end_layout

\begin_layout Subsubsection
Security 
\begin_inset CommandInset label
LatexCommand label
name "sub:Security"

\end_inset


\end_layout

\begin_layout Standard
In order to guarantee the security of the whole system, the following requiremen
ts must be ensured:
\end_layout

\begin_layout Itemize
Passwords must be stored encrypted using hash functions;
\end_layout

\begin_layout Itemize
The system should accepts users’ passwords only if they comply with certain
 complexity constraints: for instance, the password must have at least 8
 characters, at least one digit and a non alphanumeric character;
\end_layout

\begin_layout Itemize
The system should validate each input of the user in order to protect the
 system from accidental or malicious usage, like for instance SQL injection;
\end_layout

\begin_layout Itemize
Communication between client and server must be encrypted using HTTPS protocol;
 
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Scenarios Identifying
\end_layout

\begin_layout Standard
Here we list some of the possible scenarios of myTaxiService application
 usage, divided by the kind of actor they apply to:
\end_layout

\begin_layout Subsection
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
protect
\backslash
hyperlink{[AC1]}{[AC1]}
\end_layout

\end_inset

 Guest scenario
\end_layout

\begin_layout Subsubsection
Scenario: passenger user registration 
\end_layout

\begin_layout Standard
David just got off from work, but he missed the last available bus to his
 home.
 So he downloads myTaxiService app on his smartphone, he opens it and registers
 a new account, providing his email, a valid username and password.
 He checks his email inbox folder, in which he finds myTaxiService registration
 confirmation email, he confirms the subscription and logs in on the application
 with his brand new account; he won't have to repeat this login operation
 again: the app will keep him logged in until he possibly chooses to log
 out.
 He can now perform all the activities of a registered passenger user.
\end_layout

\begin_layout Subsection
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
protect
\backslash
hyperlink{[AC2]}{[AC2]}
\end_layout

\end_inset

 Passenger user scenarios
\end_layout

\begin_layout Subsubsection
Scenario: accepted ride request through mobile application 
\end_layout

\begin_layout Standard
David and his girlfriend went to the cinema this evening, and since the
 movie finished late they missed the last available bus to their home.
 So David, who has already registered to myTaxiService, decides to call
 a taxi: he opens the app on his smartphone and just taps on “request a
 ride”, and sends the request by tapping on “send request”, keeping the
 position provided by his GPS module as the ride's desired starting point.
 After few seconds, he receives a confirmation notification, telling him
 that taxicab no.
 17689 is on his way, and will meet him in about 3 minutes.
 Thus David taps on “ok” and waits for the cab to come and bring him and
 his girlfriend home, fast and safely.
\end_layout

\begin_layout Subsubsection
Scenario: login and queued ride request through web application 
\end_layout

\begin_layout Standard
Carla is home and has to get to her friend's Anna party, that is starting
 at 7 p.m.
 at her place.
 Carla's got no driving license, and she lives far from any public transportatio
n spot, so she decides to call a taxi, to avoid being late.
 Carla is currently chatting with Anna on her laptop, so she decides to
 call the taxi using myTaxiService web application.
 She opens a new tab of her browser and types myTaxiService.com; being already
 registered to the service, she quickly logs in and clicks on “request a
 ride”.
 She types her home's address as ride's starting point and sends the request.
 Since it's rush hour, it happens that there's currently no available taxi
 in that area of the city.
 So Carla immediately receives a notification which tells her she's been
 put into a waiting queue, and that she'll have to wait about 6 minutes
 for a cab to be available; she is asked if she wants to confirm or delete
 her request.
 She chooses to confirm it, since she's got no hurry, and she waits.
 After a few minutes, a new notification is received and shown on her homepage,
 telling that taxicab no.
 17446 will pick her up in about 4 minutes.
 She then goes out of her house and waits a little, until the taxi comes
 and takes her to her friends' party.
\end_layout

\begin_layout Subsubsection
Scenario: ride reservation request with non valid and valid time 
\end_layout

\begin_layout Standard
Philip is in Memphis, where he has been for some days to attend an important
 conference.
 He is boarding on his plane in 15 minutes, and he knows he'll land in about
 1.5 hours.
 Since he’ll land at rush hour, he wants to be sure that a taxi will be
 waiting for him outside the airport, to bring him home.
 To do this, he opens his myTaxiService app on his brand new iPhone; being
 a regular user of the service, he is already logged in.
 He taps on “reserve a ride”, on his home page.
 He selects the date and time when he wants to be picked up, taps on “from”
 button and taps on the airport on the city's map shown; then he taps on
 “to” box and writes his home address.
 He then clicks “send”, and the system immediately answers through a notificatio
n: he has set the reservation time too close (less than 2 hours in advance),
 so the application tells him the reservation can’t be completed.
 Philip executes again the above steps, this time inserting a valid reservation
 time; after sending, he is immediately confirmed that the reservation has
 been successfully completed.
 Later, after landing, Philip receives a reminder notification on his phone,
 reminding him that taxicab no.
 14599 will be waiting for him outside the airport in 10 minutes.
 He is thus able to collect his luggage and go meet the cab in the taxi
 waiting area.
 
\end_layout

\begin_layout Subsubsection
Scenario: deleting ride reservation request 
\end_layout

\begin_layout Standard
Philip is in Chicago, where he has been for some days to attend another
 important conference.
 He should board on his plane in 20 minutes, and he should land in about
 5 hours as usual, so he has already made a reservation for a taxi to wait
 for him when he arrives at the airport.
 But suddenly, an announcement is made at the airport, telling that his
 flight will be delayed of an unknown amount of hours, due to some problems
 with the plane.
 So, Mario decides to delete his ride reservation.
 He does it by opening myTaxiService app on his smartphone, tapping on “reservat
ion history”, sliding his finger on the target reserved ride and tapping
 on the “delete” button appeared beside it.
 He then confirms the cancellation in the popup window that has just appeared,
 and sadly waits for news about his flight.
 
\end_layout

\begin_layout Subsection
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
protect
\backslash
hyperlink{[AC3]}{[AC3]}
\end_layout

\end_inset

 Driver user scenarios 
\end_layout

\begin_layout Standard
Mario is a taxi driver working for myTaxiService public company.
 The following scenarios are the most common ones that can happen during
 his working day: 
\end_layout

\begin_layout Subsubsection
Scenario: login, accepted and completed ride request 
\end_layout

\begin_layout Standard
Mario has just started his shift for today, and he gets into his cab.
 He turns on the navigation system and the terminal, and he logs in the
 application using his personal driver ID and password.
 His state is set by default on “unavailable” when he logs in, so he immediately
 sets it on “available” and gets ready to work.
 After a minute, a ride request notification pops up on the terminal's screen:
 a client needs a ride from Central Station.
 Mario accepts the request by tapping on “accept”, and the terminal immediately
 shows the navigation system, highlighting his destination on the map and
 the best route to follow.
 He can easily switch between the navigation app and myTaxiService driver
 app by just sliding horizontally with his finger on the terminal’s screen.
 When he accepts the request, his taxi's state is automatically set on “unavaila
ble”.
 He starts heading to his destination, where in a couple of minutes he meets
 his client.
 He brings him where he needs to, gets paid and, back to the driver application
 on the terminal, taps on “terminate ride”, which automatically sets the
 state on “available”, and gets ready for the next ride.
 
\end_layout

\begin_layout Subsubsection
Scenario: reserved ride request and missing client 
\end_layout

\begin_layout Standard
Mario is in the middle of his working day, and he just completed a ride:
 his state is set back to “available”.
 After some minutes, a reserved ride request appears on the taxi's terminal,
 telling him he should be in People's Square in 10 minutes, to pick up a
 client who reserved a ride to the Central Station.
 He taps on “ok” and the screen switches to the navigation app, immediately
 showing him the best route to follow to reach People's square, and then
 the Central Station.
 The taxi's state has been automatically set on “unavailable”.
 So he heads to People's Square, where he waits a couple of minutes, but
 his passenger won't show up.
 He thus assumes he has renounced to his reserved ride, and so he taps on
 “missing client”, which communicates the system about the fact and sets
 back the taxi's state to “available”.
 
\end_layout

\begin_layout Subsubsection
Scenario: state switching, ride request refusal, extraordinary ride, logout
 
\end_layout

\begin_layout Standard
Mario has just left a passenger at his destination, and has set back his
 state to “available”.
 After a few seconds, a new ride request pops up on the application running
 on the terminal.
 Mario suddenly realizes he has to pee, since it's been sitting in the cab
 for 5 straight hours; so he taps on “refuse” and sets his state to “unavailable
”, and heads toward the closest public toilet.
 After doing what he needed, he comes back to his taxi and sets his state
 back to “available”, but he sees a guy waving his hand towards him: he
 is asking for a ride.
 Thus, Mario immediately switches his state to “unavailable” and welcomes
 the new passenger, asking where he should bring him.
 After completing the ride and telling the application so, Mario realizes
 that his shift is over for today, and so he keeps the taxi's state on “unavaila
ble”, heading to the company’s garage.
 Once reached, he logs out from the driver application and goes home.
 
\end_layout

\begin_layout Subsection
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
protect
\backslash
hyperlink{[AC4]}{[AC4]}
\end_layout

\end_inset

 Administrator scenario
\end_layout

\begin_layout Subsubsection
Scenario: driver user cancellation and creation 
\end_layout

\begin_layout Standard
Bill, one of myTaxiService administrators, is told by his boss that the
 company has just fired the driver Mario R***i, with driver ID MR130477A,
 and has hired the new driver Pablo E*****r, with given ID PE011249A as
 a replacement.
 He is in charge to delete the driver user account of Mario and to create
 a new one for Pablo.
 He logs into the system with his administrator credentials and he searches
 for the driver user with username MR130477A; he deletes it by clicking
 on the corresponding button.
 Then he clicks on “create new user” button and creates a new driver user
 with username PE011249A, he sets a valid and safe password, and he confirms.
 He will then provide Pablo the password, and instruct him on how to complete
 the login on the driver application.
 
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
UML Models
\end_layout

\begin_layout Subsection
Class Diagrams
\begin_inset CommandInset label
LatexCommand label
name "sub:Class-Diagrams"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename resources/uml/ClassDiagram1.png
	width 13cm

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
Use cases
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename resources/uml/UseCaseDiagram1.png
	width 13cm

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsubsection
Guest registers to myTaxiService
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actor
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[AC1]}{[AC1]}
\end_layout

\end_inset

 Guest user
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Goal
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G1]}{[G1]}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input Conditions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No conditions
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event Flow
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The guest user clicks on “Sign up” button on the main page of the application;
\end_layout

\begin_layout Enumerate
The system shows him the registration form containing the fields: email,
 username, password, confirm password;
\end_layout

\begin_layout Enumerate
The guest user fills all the fields;
\end_layout

\begin_layout Enumerate
The guest user clicks on “Register” button;
\end_layout

\begin_layout Enumerate
The system creates a new passenger user account that has to be verified
 in order to be used;
\end_layout

\begin_layout Enumerate
The guest user receives an email in which a confirmation link is provided;
\end_layout

\begin_layout Enumerate
The user confirms his subscription by clicking on the confirmation link,
 activating his account; 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Output Conditions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The guest user will now be able to log into the system.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
One or more fields are left blank;
\end_layout

\begin_layout Enumerate
The provided email is not well formed;
\end_layout

\begin_layout Enumerate
The provided email has been already used; 
\end_layout

\begin_layout Enumerate
The provided user has already been used;
\end_layout

\begin_layout Enumerate
The provided password doesn't match the one inside the “confirm password”
 field;
\end_layout

\begin_layout Enumerate
The provided password doesn't match the complexity constraints;
\end_layout

\begin_layout Plain Layout
All the exceptions are handled by informing the user of the problem and
 then the event flow shall restart from point 2.
 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename resources/uml/SignUpRequest.png
	width 13cm

\end_inset


\end_layout

\begin_layout Subsubsection
User logs in
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actor
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[AC2]}{[AC2]}
\end_layout

\end_inset

 Passenger User, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[AC3]}{[AC3]}
\end_layout

\end_inset

 Driver User, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[AC4]}{[AC4]}
\end_layout

\end_inset

 Administrator
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Goal
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G2]}{[G2]}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input Conditions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The user must own a valid account
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event Flow
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The user, from the main page of the application, fills Username and Password
 fields;
\end_layout

\begin_layout Enumerate
The user clicks on the “Login” button;
\end_layout

\begin_layout Enumerate
The user is redirected to his home page; 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Output Conditions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The user will be able to use all the functionalities offered to passenger
 users.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
One or more fields are left blank;
\end_layout

\begin_layout Enumerate
The provided username doesn't exist;
\end_layout

\begin_layout Enumerate
The password doesn't match the one paired with the provided username;
\end_layout

\begin_layout Plain Layout
All the exceptions are handled by informing the user of the problem and
 then the event flow shall restart from point 2.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename resources/uml/UserLogin.png
	width 13cm

\end_inset


\end_layout

\begin_layout Subsubsection
Passenger user requests a ride
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actor
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[AC2]}{[AC2]}
\end_layout

\end_inset

 Passenger User
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Goal
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G3]}{[G3]}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input Conditions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The user must be logged in;
\end_layout

\begin_layout Enumerate
The user mustn’t have already sent a ride request which hasn’t been completed
 yet; 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event Flow
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The user, from his main page, clicks on the button "Request a ride now";
\end_layout

\begin_layout Enumerate
The system shows him a page containing a map that the user can use to select
 the meeting point and a box in which he can directly type the address;
 the box is filled by default with the location provided by the GPS module,
 if there is one on the user’s device; 
\end_layout

\begin_layout Enumerate
The user selects where he wants to be picked up by either leaving his current
 position, typing a different address in the form box, or just selecting
 a location on the map;
\end_layout

\begin_layout Enumerate
The user clicks on "Send" button;
\end_layout

\begin_layout Enumerate
The user receives a notification that tells him if the requested ride has
 been correctly saved in the system or if the provided data are not valid;
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Output Conditions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The user is now waiting to receive the notification that a driver has taken
 in care of his ride, and won’t be able to make another ride request until
 the ride is completed.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The selected point or address is outside the area in which myTaxiService
 is available;
\end_layout

\begin_layout Enumerate
The typed address is invalid;
\end_layout

\begin_layout Enumerate
If there aren’t available taxi at the moment, the system informs the user
 about the situation communicating him how much users are waiting the availabili
ty of a taxi and the estimated time of the queue, asking the user if he
 wants to wait or not.
 
\end_layout

\begin_layout Plain Layout
If one of the previous exceptions is thrown, the user will be informed and
 then the flow will restart from point 2.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename resources/uml/RideRequest.png
	width 13cm

\end_inset


\end_layout

\begin_layout Subsubsection
Passenger user requests a reservation
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actor
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[AC2]}{[AC2]}
\end_layout

\end_inset

 Passenger User
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Goal
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G5]}{[G5]}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input Conditions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The user must be logged in
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event Flow
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The user, from his main page, clicks on “Reserve a ride” button;
\end_layout

\begin_layout Enumerate
The system shows a page containing a form and a map which the user can use
 to specify starting and ending locations for his ride;
\end_layout

\begin_layout Enumerate
The user selects when the reservation has to be scheduled (by specifying
 date and time) and the starting and ending locations;
\end_layout

\begin_layout Enumerate
The user presses “Send” button; 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Output Conditions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A message is shown telling that the reservation has been scheduled and the
 user will be redirected to his reservation history page.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
At least one of the provided locations is either invalid or outside the
 area in which myTaxiService is available;
\end_layout

\begin_layout Enumerate
The provided date is not valid or the request has been made less than 2
 hours in advance; 
\end_layout

\begin_layout Plain Layout
If one of the previous exceptions is thrown, the user will be informed and
 then the flow will restart from point 2.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename resources/uml/ReservationRequest.png
	width 13cm

\end_inset


\end_layout

\begin_layout Subsubsection
Passenger user deletes a reservation
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actor
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[AC2]}{[AC2]}
\end_layout

\end_inset

 Passenger User
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Goal
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G9]}{[G9]}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input Conditions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The user must be logged in;
\end_layout

\begin_layout Enumerate
The user must have at least one not yet performed reservation in his history;
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event Flow
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The user clicks on the “Reservation history” button on his home page;
\end_layout

\begin_layout Enumerate
The application will show, on top of the page, the list of reservations
 he has already requested but not yet performed; 
\end_layout

\begin_layout Enumerate
The user can choose to directly click on the “Delete” button beside the
 reservation (in this case the flow will continues from 6) or to click on
 the reservation;
\end_layout

\begin_layout Enumerate
The details of the selected reservation are shown; 
\end_layout

\begin_layout Enumerate
The user clicks on “Delete” button;
\end_layout

\begin_layout Enumerate
A confirmation message is shown, asking the user to confirm or cancel the
 operation;
\end_layout

\begin_layout Enumerate
The user clicks on “OK” button; 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Output Conditions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The reservation is deleted from the system, and the user is redirected to
 his reservation history page.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The user tries to delete a reservation that has to be performed in less
 than 1 hour (see 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[AS14]}{[AS14]}
\end_layout

\end_inset

);
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename resources/uml/ReservationDelete.png
	width 13cm

\end_inset


\end_layout

\begin_layout Subsubsection
Passenger user receives a ride confirmation notification
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actor
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[AC2]}{[AC2]}
\end_layout

\end_inset

 Passenger User
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Goal
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G4]}{[G14]}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input Conditions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The user must be logged in; 
\end_layout

\begin_layout Enumerate
The user must have requested a ride;
\end_layout

\begin_layout Enumerate
The ride must have been accepted by a driver; 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event Flow
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The user is shown a notification sent by the system, through a popup containing
 the incoming taxicab code and the estimated waiting time, telling that
 a driver is going to pick him up at the meeting point;
\end_layout

\begin_layout Enumerate
The user click on “Ok” button; 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Output Conditions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The popup disappears from the screen and the user is back on whatever page
 he was before the notification arrived;
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No exceptions.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Driver user receives a ride request notification
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actor
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[AC3]}{[AC3]}
\end_layout

\end_inset

 Driver User
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Goal
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G13]}{[G13]}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input Conditions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The driver user must be logged in;
\end_layout

\begin_layout Enumerate
A ride has been requested by a passenger user in the city zone the driver
 is currently in;
\end_layout

\begin_layout Enumerate
The driver user’s status must be on “available” and he must be the first
 available driver in that city zone’s drivers queue; 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event Flow
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The driver user is notified by a popup appearing on his main page;
\end_layout

\begin_layout Enumerate
The driver has a few seconds to decide if he wants to take care of the notified
 ride by clicking on “Accept” button, or to decline it by clicking on “Refuse”
 button; 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Output Conditions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The notification disappears from the screen and, if the driver has accepted
 the request, his status is set on “unavailable”; otherwise, it remains
 on “available”.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The driver user doesn’t provide a choice within the maximum time limit.
 The system will consider the request as refused by the driver.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename resources/uml/Ride.png
	width 13cm

\end_inset


\end_layout

\begin_layout Subsubsection
Passenger user receives a reservation reminder notification
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actor
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[AC2]}{[AC2]}
\end_layout

\end_inset

 Passenger User
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Goal
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G6]}{[G6]}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input Conditions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The user must be logged in; 
\end_layout

\begin_layout Enumerate
The user must have requested a reservation that is going to occur in 10
 minutes; 
\end_layout

\begin_layout Enumerate
The reservation has been assigned to a driver; 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event Flow
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The user is notified by the system, through a popup containing the incoming
 taxicab code, that his reservation shall be performed in 10 minutes, and
 that a driver is going to pick him up at the meeting point; 
\end_layout

\begin_layout Enumerate
The user clicks on “Ok” button; 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Output Conditions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The popup disappears from the screen and the user is back on whatever page
 he was before the notification arrived;
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No exceptions.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Driver user receives a reservation request notification
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actor
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[AC3]}{[AC3]}
\end_layout

\end_inset

 Driver User
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Goal
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G15]}{[G15]}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input Conditions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The driver must be logged in;
\end_layout

\begin_layout Enumerate
The driver user must be available;
\end_layout

\begin_layout Enumerate
A scheduled reservation has to be performed now; 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event Flow
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The user, from the main page of application, is notified by a popup that
 appears on the screen;
\end_layout

\begin_layout Enumerate
The user click on “Ok” button; 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Output Conditions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The notification disappears from the screen and the status of the driver
 user changes to unavailable.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
 No exceptions
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename resources/uml/Reservation.png
	width 13cm

\end_inset


\end_layout

\begin_layout Subsubsection
Driver user changes his status
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actor
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[AC3]}{[AC3]}
\end_layout

\end_inset

 Driver User
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Goal
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G12]}{[G12]}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input Conditions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The driver user must be logged in;
\end_layout

\begin_layout Enumerate
The driver user mustn’t be performing a ride; 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event Flow
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The driver user swipes on the “available/unavailable” switcher button on
 his main page; 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Output Conditions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The availability status changes to “available”/”unavailable” 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No exceptions
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename resources/uml/DriverStatus.png
	width 13cm

\end_inset


\end_layout

\begin_layout Subsubsection
Driver user completes the current ride
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actor
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[AC3]}{[AC3]}
\end_layout

\end_inset

 Driver User
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Goal
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{[G16]}{[G16]}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input Conditions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
The driver must be logged in;
\end_layout

\begin_layout Enumerate
The driver must be currently performing a ride;
\end_layout

\begin_layout Enumerate
The driver user has reached the meeting point with the client but can’t
 find him, or has just successfully brought him to his destination; 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event Flow
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
From his main page the driver user presses “Missing client” if he hasn’t
 found the user who requested the ride at the meeting point; otherwise he
 taps on “Terminate ride”;
\end_layout

\begin_layout Enumerate
The driver user’s status is automatically set on “available”; 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Output Conditions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The driver user is now able to receive new ride and reserved ride requests.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No exceptions
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash
 
\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename resources/uml/RideComplete.png
	width 13cm

\end_inset


\end_layout

\begin_layout Subsection
Statechart Diagrams 
\end_layout

\begin_layout Standard
Here we provide a statechart diagram describing the life cycle of the object
 
\begin_inset Quotes eld
\end_inset

Ride Request
\begin_inset Quotes erd
\end_inset

 presented in the class diagram.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename resources/uml/StatechartDiagram1.png
	width 13cm

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Appendix
\end_layout

\begin_layout Subsection
Alloy
\end_layout

\begin_layout Subsubsection
Alloy model
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting[language=alloy]{resources/alloy/model_v2.als}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsubsection
Generated worlds
\end_layout

\begin_layout Standard
The following is a general world, created with the predicate “show”, that
 shows a scenario in which there is a ride request sent by a passenger which
 is “completed”.
 The system has sent a notification to the driver DriverAccount1 who has
 decided to refuse it, so a new notification has been sent to another driver,
 DriverAccount0, who has accepted the ride, and the request has thus been
 associated to him.
 Some relationships have been hidden to allow a better readability.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\begin_inset Graphics
	filename resources/alloy/General.png
	width 13cm

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The following are some significant worlds generated by the Alloy analyzer
 that highlight some facts that hold in the model.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Itemize
This world, generated with “showDriverNotification” predicate, shows that
 if a passenger has sent a request and that request is associated to a driver,
 the system must have sent a notification to the driver associated to the
 request and the notification must have been accepted.
 Since a driver cannot take care of two requests at the same time, the appointme
nt time of the two requests must be different.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename resources/alloy/DriverNotification.png
	width 13cm

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Itemize
This world, generated with “showPassengerQueueZone” predicate, shows that
 if a passenger is in the waiting queue of a certain zone, he must have
 sent a ride request with a starting location that is located inside that
 zone.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename resources/alloy/PassengerQueueZone.png
	width 13cm

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Itemize
This world, generate with “showDriverQueueZone” predicate, shows that if
 a driver is inside the drivers’ queue of a certain zone, he must be in
 “available” status and must be driving a taxi which is located in that
 city zone.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\begin_inset Graphics
	filename resources/alloy/TaxiQueueZone.png
	width 13cm

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Softwares and tools used
\end_layout

\begin_layout Itemize
Google Docs (docs.google.com): to redact the document
\end_layout

\begin_layout Itemize
Lyx (lyx.org): to typeset and format the document
\end_layout

\begin_layout Itemize
StarUML (staruml.io): to create Use Case Diagrams, Class Diagram, Sequence
 Diagrams and Statechart Diagram
\end_layout

\begin_layout Itemize
Balsamiq (balsamiq.com): to create interface mockups
\end_layout

\begin_layout Itemize
Alloy Analyzer (alloy.mit.edu/alloy): to prove the consistency of our model
\end_layout

\begin_layout Subsection
Hours of work
\end_layout

\begin_layout Standard
The following is the time we spent to redact the document:
\end_layout

\begin_layout Itemize
Matteo Bulloni: ~36 hours
\end_layout

\begin_layout Itemize
Marco Cannici: ~36 hours
\end_layout

\end_body
\end_document
